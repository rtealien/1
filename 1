def func14(arg55, arg56):
    var57 = func17()
    var58 = (arg55 - -626) | arg55 & -1882744633
    var59 = arg55 | arg56
    var60 = arg56 - -89426909 | var58 + arg56
    var61 = (var58 | var58) & var60 + var60
    var62 = (762 & 226) - arg55
    var63 = (1844323281 - arg55 - var62) & var58
    var64 = var63 + ((var59 + -853286982) & -890688168)
    var65 = var63 + (var60 & 2097391593) & arg55
    var66 = (var57 + var58) - (var61 ^ var57)
    var67 = var57 - var63 ^ var58
    result = (((var57 | ((642469340 | var61) | var65 - ((var63 & var62 ^ var60) - (810 & 2)))) | var67) + var65) - var60
    return result
def func17():
    func15()
    result = len(xrange(22))
    func16()
    return result
def func16():
    global len
    del len
def func15():
    global len
    len = lambda x : -3
def func4(arg19, arg20):
    var29 = var23(arg20, arg19)
    var30 = func13()
    if arg19 < var30:
        var31 = arg19 & 2023651860 & arg19 ^ var30
    else:
        var31 = var29 ^ arg19 ^ arg20
    if var30 < arg20:
        var32 = -1727835662 | arg19 | -22 - var30
    else:
        var32 = arg20 + arg19
    if arg19 < arg20:
        var33 = -563844023 & arg20
    else:
        var33 = -1681519936 ^ arg20 & 127 - var29
    var34 = -922431232 | arg19
    var35 = var30 - 838 ^ (arg20 + arg19)
    if var30 < arg19:
        var36 = (arg20 | var35) + arg20
    else:
        var36 = 492 + ((arg19 + arg19) | 891)
    var37 = var34 | var29
    var38 = -2142775939 + arg19 | (arg19 + var34)
    var39 = -2017929354 ^ var34
    var40 = ((var38 | var29) - var37) - var37
    var41 = (arg20 + var39) & var39 & var37
    var42 = var40 - ((var34 & var39) ^ -347)
    var43 = 617 + var35 + var39 + var30
    var44 = var42 | var35 + var35 + 885
    var45 = var40 + (var34 - -705) | var35
    var46 = var42 + (var38 & var30) - var38
    var47 = -557 + (var46 & var37 - var35)
    var48 = var40 ^ var40
    var49 = ((var38 & var39) + var44) ^ var40
    var50 = var47 - var35 - var35 + var47
    var51 = (var45 & arg19) & var30
    var52 = (var42 ^ var39) - var43 ^ var48
    var53 = (var48 & var44 + var47) - var45
    var54 = var30 - ((var34 + var43) & var38)
    result = var35 & var30
    return result
def func13():
    func11()
    result = len(xrange(21))
    func12()
    return result
def func12():
    global len
    del len
def func11():
    global len
    len = lambda x : -3
def func7(arg24, arg25):
    var26 = func10()
    var27 = 720902334 | arg24 - 145
    var28 = 897 | var26
    result = 366 - arg24 - arg24 + arg24
    return result
def func10():
    func8()
    result = len((8 & (1 - -7) for i in xrange(30)))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -2
def func6():
    closure = [1]
    def func5(arg21, arg22):
        closure[0] += func7(arg21, arg22)
        return closure[0]
    func = func5
    return func
var23 = func6()
def func3(arg12, arg13):
    var14 = ((637 + arg13) - (arg12 - 769)) | 640590108 & arg12 | arg13 - -421896708
    var15 = 119151704 | 1626479631
    var16 = -361 - var15
    var17 = (164 ^ var16 ^ ((var14 ^ var16 ^ arg13) & (var14 | (var15 ^ var14 ^ ((var14 | ((var14 ^ (var15 - var16) & arg12 - arg13 - -112565305 | var16) ^ var15)) ^ var15))) | -459959736) - -212 & var15) + -1518208801
    var18 = ((((((var15 ^ var16) & var15) ^ (var17 & arg12)) + -253) - (var14 - var16 - 831 + var16 | var15 & 44 + -686) & -634 ^ (var16 & var14 + var17 & var16) | var16) | 152688389) | arg12 & arg13
    result = var18 | -73
    return result
def func2(arg5, arg6):
    var7 = (-409 ^ 1255317201 ^ arg5 | arg6) & -685 - arg5 - ((arg6 & (((arg6 ^ -790) + arg5 | -391) | -1118757591) ^ (((arg5 & arg5) + ((arg6 - arg5 - (-698 + arg5)) + 647427171)) | arg6)) & -430524131) & arg5
    var8 = (var7 ^ arg6 - ((var7 - (arg5 + -470) ^ arg6 & (var7 ^ 99944396 & arg6 & ((1247064043 + -345986287) | arg6) & arg5)) - -379) & (1413469973 | 1042596696)) & (((arg5 & arg6) + arg5 - var7) | -91329470 + var7)
    var9 = arg5 - (arg5 & -812623347 - var7)
    if var9 < var7:
        var10 = arg5 + var7
    else:
        var10 = var8 & arg6 & -308 ^ (71534624 ^ (arg5 - (473862995 | var9))) + (var7 & -230155177)
    var11 = (var7 - -691) - var9
    result = var9 ^ var9 & var11 ^ (var11 + 721) | ((134 ^ var7 & arg6) - var8)
    return result
def func1(arg1, arg2):
    var3 = (arg2 | arg2 & arg2) & arg2 & -2016184336 ^ (arg2 | -630 & 618 - arg2 | ((arg1 & (arg1 ^ 184)) - -272) & arg2)
    var4 = 980327260 - -1538855092 | var3 ^ arg1 ^ ((var3 + (arg1 + 435170471 + var3 | ((var3 & ((arg2 ^ var3) ^ arg1) & arg1 - arg2) & var3 | 200579955))) | 1602514238 + arg1) ^ arg2 + arg2 - 194360523 | -384
    result = 904079946 | var4 + var3 - var3 & 684802932 - (var4 - arg1) | var4 - (arg2 - var4) | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 12'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 4'
    print 'arg_number: 19'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 14'
    print 'arg_number: 55'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 18'
    print 'arg_number: 68'
    for i in xrange(25000):
        x = 5
        x = func14(x, i)
        print x,
